'use client';

import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@workspace/ui/components/card';
import { Button } from '@workspace/ui/components/button';
import { Badge } from '@workspace/ui/components/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@workspace/ui/components/tabs';

import { AccessibleFormRenderer } from '../components/forms/AccessibleFormRenderer';
import { ResponsiveContainer, ResponsiveText, ResponsiveFormLayout, useMobileOptimization } from '../components/forms/responsive/ResponsiveFormLayout';
import { FormPerformanceWidget } from '../components/performance/FormPerformanceWidget';

// 示例表单元数据
const sampleFormMetadata = {
  id: 'demo-accessible-form',
  name: '无障碍访问表单演示',
  version: '1.0.0',
  fields: [
    {
      id: 'personal-info',
      name: 'personalInfo',
      type: 'text' as const,
      label: '个人信息',
      required: true,
      description: '请输入您的真实姓名',
      validation: {
        minLength: 2,
        maxLength: 50,
      },
    },
    {
      id: 'email',
      name: 'email',
      type: 'email' as const,
      label: '邮箱地址',
      required: true,
      placeholder: '请输入有效的邮箱地址',
      validation: {
        pattern: '^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$',
      },
    },
    {
      id: 'phone',
      name: 'phone',
      type: 'tel' as const,
      label: '手机号码',
      required: false,
      placeholder: '请输入11位手机号',
      validation: {
        pattern: '^1[3-9]\\d{9}$',
      },
    },
    {
      id: 'age',
      name: 'age',
      type: 'number' as const,
      label: '年龄',
      required: true,
      description: '请输入您的年龄（18-100岁）',
      validation: {
        min: 18,
        max: 100,
      },
    },
    {
      id: 'gender',
      name: 'gender',
      type: 'select' as const,
      label: '性别',
      required: true,
      options: [
        { value: 'male', label: '男' },
        { value: 'female', label: '女' },
        { value: 'other', label: '其他' },
        { value: 'prefer_not_to_say', label: '不愿透露' },
      ],
    },
    {
      id: 'interests',
      name: 'interests',
      type: 'select' as const,
      label: '兴趣爱好',
      required: false,
      multiple: true,
      searchable: true,
      options: [
        { value: 'reading', label: '阅读' },
        { value: 'sports', label: '运动' },
        { value: 'music', label: '音乐' },
        { value: 'travel', label: '旅行' },
        { value: 'cooking', label: '烹饪' },
        { value: 'photography', label: '摄影' },
        { value: 'gaming', label: '游戏' },
        { value: 'art', label: '艺术' },
      ],
    },
    {
      id: 'bio',
      name: 'bio',
      type: 'textarea' as const,
      label: '个人简介',
      required: false,
      placeholder: '请简单介绍一下自己...',
      validation: {
        maxLength: 500,
      },
    },
    {
      id: 'terms',
      name: 'terms',
      type: 'checkbox' as const,
      label: '同意条款',
      required: true,
      description: '我已阅读并同意服务条款和隐私政策',
    },
    {
      id: 'newsletter',
      name: 'newsletter',
      type: 'checkbox' as const,
      label: '订阅邮件',
      required: false,
      description: '我愿意接收产品更新和优惠信息',
    },
  ],
};

// 复杂表单示例
const complexFormMetadata = {
  id: 'complex-form',
  name: '复杂表单示例',
  version: '1.0.0',
  fields: Array.from({ length: 15 }, (_, i) => ({
    id: `field-${i}`,
    name: `field${i}`,
    type: ['text', 'number', 'select', 'textarea'][i % 4] as any,
    label: `字段 ${i + 1}`,
    required: i % 3 === 0,
    placeholder: `请输入字段 ${i + 1}`,
    options: i % 4 === 2 ? Array.from({ length: 5 }, (_, j) => ({
      label: `选项 ${j + 1}`,
      value: `option-${j}`,
    })) : undefined,
    validation: i % 4 === 0 ? {
      minLength: 1,
      maxLength: 100,
    } : undefined,
  })),
};

export default function DemoAccessiblePage() {
  const [submittedData, setSubmittedData] = React.useState<any>(null);
  const [activeTab, setActiveTab] = React.useState('basic');
  const [formData, setFormData] = React.useState<any>({});
  const mobileOptimization = useMobileOptimization();

  const handleFormSubmit = React.useCallback((data: any) => {
    console.log('表单提交:', data);
    setSubmittedData(data);
    setFormData(data);
  }, []);

  const handleFormReset = React.useCallback(() => {
    setSubmittedData(null);
    setFormData({});
  }, []);

  const handleFormCancel = React.useCallback(() => {
    setSubmittedData(null);
  }, []);

  const handleFormChange = React.useCallback((data: any, changedField: string) => {
    setFormData(data);
    console.log('字段变化:', changedField, data[changedField]);
  }, []);

  const keyboardShortcuts = [
    { key: 'Tab', description: '导航到下一个字段', category: '导航' },
    { key: 'Shift + Tab', description: '导航到上一个字段', category: '导航' },
    { key: 'Space/Enter', description: '选择/激活选项', category: '交互' },
    { key: 'Escape', description: '取消操作', category: '表单操作' },
    { key: 'Ctrl/Cmd + Enter', description: '提交表单', category: '表单操作' },
    { key: 'Ctrl/Cmd + Shift + R', description: '重置表单', category: '表单操作' },
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800">
      <ResponsiveContainer size="xl">
        <div className="py-8">
          {/* 标题区域 */}
          <div className="text-center mb-8">
            <ResponsiveText size="4xl" weight="bold" className="mb-4">
              无障碍访问表单演示
            </ResponsiveText>
            <ResponsiveText size="lg" className="text-muted-foreground mb-6">
              支持键盘导航、屏幕阅读器和响应式设计的现代化表单
            </ResponsiveText>

            {/* 设备信息显示 */}
            <div className="flex flex-wrap justify-center gap-2 mb-4">
              <Badge variant={mobileOptimization.isMobile ? 'default' : 'secondary'}>
                {mobileOptimization.isMobile ? '📱 移动设备' : '🖥️ 桌面设备'}
              </Badge>
              <Badge variant={mobileOptimization.isTablet ? 'default' : 'secondary'}>
                {mobileOptimization.isTablet ? '📟 平板设备' : '🖥️ 非平板'}
              </Badge>
              <Badge variant={mobileOptimization.isLandscape ? 'default' : 'secondary'}>
                {mobileOptimization.isLandscape ? '↔️ 横向' : '↕️ 纵向'}
              </Badge>
              <Badge variant={mobileOptimization.isTouchDevice ? 'default' : 'secondary'}>
                {mobileOptimization.isTouchDevice ? '👆 触摸设备' : '🖱️ 非触摸设备'}
              </Badge>
            </div>

            {/* 性能监控 */}
            <FormPerformanceWidget
              formId="demo-accessible"
              componentCount={sampleFormMetadata.fields.length}
              showDetails={true}
            />
          </div>

          {/* 主要内容区域 */}
          <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
            <TabsList className="grid w-full grid-cols-4">
              <TabsTrigger value="basic">基础表单</TabsTrigger>
              <TabsTrigger value="complex">复杂表单</TabsTrigger>
              <TabsTrigger value="responsive">响应式演示</TabsTrigger>
              <TabsTrigger value="features">功能说明</TabsTrigger>
            </TabsList>

            <TabsContent value="basic" className="space-y-6">
              <Card>
                <CardHeader>
                  <CardTitle>基础无障碍表单</CardTitle>
                </CardHeader>
                <CardContent>
                  <ResponsiveFormLayout>
                    <AccessibleFormRenderer
                      metadata={sampleFormMetadata}
                      onSubmit={handleFormSubmit}
                      onReset={handleFormReset}
                      onCancel={handleFormCancel}
                      onChange={handleFormChange}
                      showPerformance={true}
                      showKeyboardShortcuts={true}
                      initialData={{
                        personalInfo: '张三',
                        email: 'zhangsan@example.com',
                      }}
                      ariaLabel="用户信息收集表单"
                    />
                  </ResponsiveFormLayout>
                </CardContent>
              </Card>

              {/* 提交数据显示 */}
              {submittedData && (
                <Card>
                  <CardHeader>
                    <CardTitle>提交的数据</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <pre className="bg-muted p-4 rounded-md overflow-auto text-sm">
                      {JSON.stringify(submittedData, null, 2)}
                    </pre>
                  </CardContent>
                </Card>
              )}
            </TabsContent>

            <TabsContent value="complex" className="space-y-6">
              <Card>
                <CardHeader>
                  <CardTitle>复杂表单示例（15个字段）</CardTitle>
                </CardHeader>
                <CardContent>
                  <AccessibleFormRenderer
                    metadata={complexFormMetadata}
                    onSubmit={handleFormSubmit}
                    onReset={handleFormReset}
                    onCancel={handleFormCancel}
                    onChange={handleFormChange}
                    showPerformance={true}
                    showKeyboardShortcuts={true}
                    ariaLabel="复杂表单演示"
                  />
                </CardContent>
              </Card>
            </TabsContent>

            <TabsContent value="responsive" className="space-y-6">
              <Card>
                <CardHeader>
                  <CardTitle>响应式布局演示</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-6">
                    {/* 响应式网格演示 */}
                    <div>
                      <ResponsiveText size="lg" weight="semibold" className="mb-4">
                        响应式网格布局
                      </ResponsiveText>
                      <ResponsiveGrid cols={{ xs: 1, sm: 2, md: 3, lg: 4 }} gap={4}>
                        {[1, 2, 3, 4, 5, 6, 7, 8].map((item) => (
                          <Card key={item} className="p-4">
                            <ResponsiveText size="base" weight="medium">
                              项目 {item}
                            </ResponsiveText>
                            <ResponsiveText size="sm" className="text-muted-foreground">
                              响应式网格项
                            </ResponsiveText>
                          </Card>
                        ))}
                      </ResponsiveGrid>
                    </div>

                    {/* 响应式文本演示 */}
                    <div>
                      <ResponsiveText size="lg" weight="semibold" className="mb-4">
                        响应式文本
                      </ResponsiveText>
                      <ResponsiveText
                        size={{ xs: 'sm', sm: 'base', md: 'lg', lg: 'xl' }}
                        weight="medium"
                      >
                        此文本会根据屏幕大小自动调整尺寸
                      </ResponsiveText>
                    </div>

                    {/* 设备特性演示 */}
                    <div>
                      <ResponsiveText size="lg" weight="semibold" className="mb-4">
                        设备优化特性
                      </ResponsiveText>
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <Card className="p-4">
                          <ResponsiveText size="base" weight="medium" className="mb-2">
                            触摸目标尺寸
                          </ResponsiveText>
                          <ResponsiveText size="sm" className="text-muted-foreground">
                            {mobileOptimization.getTouchTargetSize()}px
                          </ResponsiveText>
                        </Card>
                        <Card className="p-4">
                          <ResponsiveText size="base" weight="medium" className="mb-2">
                            字体缩放比例
                          </ResponsiveText>
                          <ResponsiveText size="sm" className="text-muted-foreground">
                            {mobileOptimization.getFontScale().toFixed(2)}x
                          </ResponsiveText>
                        </Card>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </TabsContent>

            <TabsContent value="features" className="space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <Card>
                  <CardHeader>
                    <CardTitle>🎯 无障碍访问特性</CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="space-y-2">
                      <ResponsiveText size="base" weight="medium">
                        ✅ 键盘导航支持
                      </ResponsiveText>
                      <ResponsiveText size="sm" className="text-muted-foreground">
                        完整的键盘操作支持，包括Tab、方向键等
                      </ResponsiveText>
                    </div>
                    <div className="space-y-2">
                      <ResponsiveText size="base" weight="medium">
                        ✅ 屏幕阅读器优化
                      </ResponsiveText>
                      <ResponsiveText size="sm" className="text-muted-foreground">
                        ARIA标签、实时区域、语义化结构
                      </ResponsiveText>
                    </div>
                    <div className="space-y-2">
                      <ResponsiveText size="base" weight="medium">
                        ✅ 焦点管理
                      </ResponsiveText>
                      <ResponsiveText size="sm" className="text-muted-foreground">
                        智能焦点陷阱和错误定位
                      </ResponsiveText>
                    </div>
                    <div className="space-y-2">
                      <ResponsiveText size="base" weight="medium">
                        ✅ 高对比度支持
                      </ResponsiveText>
                      <ResponsiveText size="sm" className="text-muted-foreground">
                        符合WCAG 2.1 AA标准的颜色对比
                      </ResponsiveText>
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle>📱 响应式设计特性</CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="space-y-2">
                      <ResponsiveText size="base" weight="medium">
                        ✅ 断点系统
                      </ResponsiveText>
                      <ResponsiveText size="sm" className="text-muted-foreground">
                        6个响应式断点，支持各种设备
                      </ResponsiveText>
                    </div>
                    <div className="space-y-2">
                      <ResponsiveText size="base" weight="medium">
                        ✅ 触摸优化
                      </ResponsiveText>
                      <ResponsiveText size="sm" className="text-muted-foreground">
                        移动端友好的触摸目标尺寸
                      </ResponsiveText>
                    </div>
                    <div className="space-y-2">
                      <ResponsiveText size="base" weight="medium">
                        ✅ 自适应布局
                      </ResponsiveText>
                      <ResponsiveText size="sm" className="text-muted-foreground">
                        堆叠、内联、网格等多种布局模式
                      </ResponsiveText>
                    </div>
                    <div className="space-y-2">
                      <ResponsiveText size="base" weight="medium">
                        ✅ 设备检测
                      </ResponsiveText>
                      <ResponsiveText size="sm" className="text-muted-foreground">
                        自动识别设备类型和输入法
                      </ResponsiveText>
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle>⌨️ 键盘快捷键</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-2">
                      {keyboardShortcuts.map((shortcut, index) => (
                        <div key={index} className="flex justify-between items-center">
                          <ResponsiveText size="sm" weight="medium">
                            {shortcut.description}
                          </ResponsiveText>
                          <Badge variant="outline">{shortcut.key}</Badge>
                        </div>
                      ))}
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle>🚀 性能优化</CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="space-y-2">
                      <ResponsiveText size="base" weight="medium">
                        ✅ 懒加载
                      </ResponsiveText>
                      <ResponsiveText size="sm" className="text-muted-foreground">
                        按需加载表单组件，减少初始包大小
                      </ResponsiveText>
                    </div>
                    <div className="space-y-2">
                      <ResponsiveText size="base" weight="medium">
                        ✅ 缓存优化
                      </ResponsiveText>
                      <ResponsiveText size="sm" className="text-muted-foreground">
                        Schema编译结果缓存，提升验证性能
                      </ResponsiveText>
                    </div>
                    <div className="space-y-2">
                      <ResponsiveText size="base" weight="medium">
                        ✅ 虚拟化
                      </ResponsiveText>
                      <ResponsiveText size="sm" className="text-muted-foreground">
                        大型表单的虚拟滚动支持
                      </ResponsiveText>
                    </div>
                    <div className="space-y-2">
                      <ResponsiveText size="base" weight="medium">
                        ✅ 性能监控
                      </ResponsiveText>
                      <ResponsiveText size="sm" className="text-muted-foreground">
                        实时性能指标收集和优化建议
                      </ResponsiveText>
                    </div>
                  </CardContent>
                </Card>
              </div>
            </TabsContent>
          </Tabs>
        </div>
      </ResponsiveContainer>
    </div>
  );
}