// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User table for authentication
model User {
  id            String   @id @default(cuid())
  name          String   @db.VarChar(255)
  email         String   @unique @db.VarChar(255)
  emailVerified Boolean  @default(false) @map("email_verified")
  image         String?  @db.Text
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  // Relations
  accounts  Account[]
  sessions  Session[]
  posts     Post[]

  @@index([email])
  @@index([createdAt])
  @@map("user")
}

// Session table for authentication
model Session {
  id        String   @id @default(cuid())
  expiresAt DateTime @map("expires_at")
  token     String   @unique @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  ipAddress String?  @map("ip_address") @db.VarChar(45)
  userAgent String?  @map("user_agent") @db.Text

  // Relations
  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([expiresAt])
  @@index([token])
  @@map("session")
}

// Account table for OAuth providers
model Account {
  id                        String    @id @default(cuid())
  accountId                 String    @map("account_id")
  providerId                String    @map("provider_id")
  userId                    String    @map("user_id")
  accessToken               String?   @map("access_token")
  refreshToken              String?   @map("refresh_token")
  idToken                   String?   @map("id_token")
  accessTokenExpiresAt      DateTime? @map("access_token_expires_at")
  refreshTokenExpiresAt     DateTime? @map("refresh_token_expires_at")
  scope                     String?
  password                  String?
  createdAt                 DateTime  @default(now()) @map("created_at")
  updatedAt                 DateTime  @updatedAt @map("updated_at")

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([providerId, accountId])
  @@map("account")
}

// Verification table for email verification
model Verification {
  id        String   @id @default(cuid())
  identifier String
  value     String
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("verification")
}

// Post table for blog posts
model Post {
  id        String   @id @default(cuid())
  title     String   @db.VarChar(255)
  content   String   @db.Text
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([createdAt])
  @@index([title])
  @@map("post")
}